/** ЗАДАЧА 36 - Случайные числа
 *
 * 1. Cгенерируйте новое 4-значное случайное число.
 * Диапазон для случайного числа 1000 - 9999.
 *
 * 2. Убедитесь, что это новое случайное число не совпадает ни с одним из чисел в массиве myNumbers.
 *
 * 3. Если совпадает, вам нужно сгенерировать новое 4-значное число.
 *
 * 4. Если совпадений нет (новый номер уникален), добавьте его в массив myNumbers.
 *
 * ВАЖНО: В решении задачи используйте функции:
 *  - для генерации случайного числа в заданном диапазоне
 *  - для добавления случайного числа в массив с возвратом измененного массива
 */

const MIN = 1000    // переменные не меняют свои значения на протяжении жизни программы. Это прям очень констаныты.
// Почему не меняют? Я так решил! Поэтому наименование переменных заглавными буквами. это сигнал другим разработчикам!
const MAX = 9999

const myNumbers = [2355, 7235, 8135, 1762, 2361, 8351]

const random = (min, max) => {
    // min = Math.ceil(min);          использовать при условии, что значения переменных = не равным числам
    // max = Math.floor(max);
    return Math.floor(Math.random() * (max - min)) + min;
}
console.log(random(MIN, MAX))
console.log(myNumbers)

const addARandomToTheArray = (min, max, arr) => {
    let newRandom
    //arr.push(newRandom)    таким образом мы мутируем и исхлдный массив, поэтому лучше воспользовать одним из способов создания нового массива, например spread
    const updatedArr = [...arr]

    do {
        newRandom = random(min, max)
        console.log(newRandom)        //<--- проверка работоспособности кода. Можно заменить эдементы массива на числа от 1 до 10, задать соответствующие переменные и данная проверка станет более очевидной
    } while (updatedArr.includes(newRandom))    // сгенерировать новое рандомное число внутри цикла и выполнять это пока         условие правдиво (новое число гененируется при условии, что newRandom уже есть в updatedArr ) как только мы найдём новое число, которого нет в оригинальном массиве - условие окажеться ложным и мы прервём цикл. и после цикла мы запушим новое число в массив.
    updatedArr.push(newRandom)
    return updatedArr
}
const updatedArray = addARandomToTheArray(MIN, MAX, myNumbers)
console.log('Update Array', updatedArray)
console.log('Original Array', myNumbers)

/**
 * метод includes позволяет проверить наличие нужного элемента в массиве, и в случае совпадения вернуть true
 */

//console.log(myNumbers.includes(7235))
