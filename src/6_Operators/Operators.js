Boolean ('')

//Способ вызова функции с помощью оператора &&
let b = 10
b && console.log('Выполнено') //<--- результатом всего выражения будет undefined так как log всегда возвращает
// undefined. Результатом выражения первого оператора будет true и 10, поэтому мы перешли к вычислению выражения
// второго оператора. В итоге получили undefined и в консоли Выполнено
let c
c && console.log('Выполнено')  //<--- первый операнд ложный, потому второй операнд игнорируем. Результат всего
// выражения undefined - поскольку первый операнд не определён
// Этот подход позволяет вызывать любую фунцию в зависимости от других? условий. Метод-замена if..else

//Spread - оператор разделения объекта на свойства  (...а)
const button = {
    width:200,
    text:'Buy'
}
const redButton ={  //<--- 1) создаём новый объект
    ...button,      // <--- 2) разделяем исходнфй объект на свойства
    color:'red'     // <--- 3) добавляем новое св-во
}
console.table(redButton)   // <--- 4) в итоге получаем новый объект со старыми свойствам +  новое добавленое св-во
//Если же добаляемое своство уже есть в объекте, то его значение перезапишется на новое

const buttonInfo = {
    text: 'Buy'
}
const buttonStyle = {
    color: 'grey',
    width: 200,
    height: 300
}
const newButton = {
    ...buttonInfo,
    ...buttonStyle
}
console.log(newButton)
console.table(newButton)